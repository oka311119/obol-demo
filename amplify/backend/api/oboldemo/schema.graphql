type User @model @auth(rules: [{ allow: private }]) {
  id: ID!
  email: AWSEmail!
  name: String!
  profileImageUrl: AWSURL!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  deletedAt: AWSDateTime
  Channels: [Channel] @hasMany(indexName: "byUser", fields: ["id"])
}

type Channel @model @auth(rules: [{ allow: private }]) {
  id: ID!
  name: String!
  canDelete: Boolean!
  thumbnailUrl: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  deletedAt: AWSDateTime
  userID: ID! @index(name: "byUser")
  Cards: [Card] @hasMany(indexName: "byChannel", fields: ["id"])
}

type Card @model @auth(rules: [{ allow: private }]) {
  id: ID!
  channelId: String!
  question: String!
  answer: String!
  level: Int!
  dueDate: AWSDate
  questionImageUrl: [AWSURL]
  answerImageUrl: [AWSURL]
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  deletedAt: AWSDateTime
  channelID: ID! @index(name: "byChannel")
  Tags: [Tag] @manyToMany(relationName: "CardTag")
  Plans: [Plan] @hasMany(indexName: "byCard", fields: ["id"])
}

type Tag @model @auth(rules: [{ allow: private }]) {
  id: ID!
  tagName: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  deletedAt: AWSDateTime
  cards: [Card] @manyToMany(relationName: "CardTag")
}

type Plan @model @auth(rules: [{ allow: private }]) {
  id: ID!
  planDate: AWSDateTime!
  score: Int!
  createdAt: AWSDateTime!
  cardID: ID! @index(name: "byCard")
}
